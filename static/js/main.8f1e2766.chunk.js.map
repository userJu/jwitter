{"version":3,"sources":["components/Navigation.jsx","fbase.js","components/AuthForm.jsx","components/routes/Auth.jsx","components/Jweet.jsx","components/JweetFactory.jsx","components/routes/Home.jsx","components/routes/Profile.jsx","components/Router.js","components/App.jsx","index.js"],"names":["Navigation","userObj","to","displayName","app","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storage","getStorage","AuthForm","props","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","event","a","preventDefault","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","then","result","credentialFromResult","accessToken","user","catch","code","credentialFromError","GithubAuthProvider","Jweet","jweetObj","isOwner","editing","setEditing","text","newJweet","setNewJweet","onDeleteClick","window","confirm","console","log","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","src","width","height","NweetFactory","jweet","setJweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","Home","jweets","setJweets","useEffect","q","query","onSnapshot","snapshot","jweetArray","docs","map","data","Profile","refreshUser","navigate","useNavigate","newDisplayName","setNewDisplayName","getMyJweets","where","orderBy","updateProfile","currentUser","signOut","AppRouter","isLoggedIn","path","element","App","init","setInit","setUserObj","onAuthStateChanged","Object","assign","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f1e2766.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">{userObj.displayName}Ïùò profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDERID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storage = getStorage(app);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n} from \"firebase/auth\";\r\n\r\nconst AuthForm = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount === true) {\r\n        const auth = getAuth();\r\n        data = await createUserWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        const auth = getAuth();\r\n        data = await signInWithEmailAndPassword(auth, email, password);\r\n        //       const auth = getAuth();\r\n        // signInWithEmailAndPassword(auth, email, password)\r\n        //   .then((userCredential) => {\r\n        //     const user = userCredential.user;\r\n        //   })\r\n        //   .catch((error) => {\r\n        //     const errorCode = error.code;\r\n        //     const errorMessage = error.message;\r\n        //   });\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        ></input>\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        ></input>\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log in\"}\r\n        ></input>\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n} from \"firebase/auth\";\r\nimport { authService } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"Google\") {\r\n      provider = new GoogleAuthProvider();\r\n      const auth = getAuth();\r\n      signInWithPopup(auth, provider)\r\n        .then((result) => {\r\n          const credential = GoogleAuthProvider.credentialFromResult(result);\r\n          const token = credential.accessToken;\r\n          const user = result.user;\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          const email = error.email;\r\n          const credential = GoogleAuthProvider.credentialFromError(error);\r\n        });\r\n    } else if (name === \"Github\") {\r\n      provider = new GithubAuthProvider();\r\n      const auth = getAuth();\r\n      signInWithPopup(auth, provider)\r\n        .then((result) => {\r\n          const credential = GithubAuthProvider.credentialFromResult(result);\r\n          const token = credential.accessToken;\r\n          const user = result.user;\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          const email = error.email;\r\n          const credential = GithubAuthProvider.credentialFromError(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"Google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"Github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { ref, deleteObject } from \"firebase/storage\";\r\nimport { dbService, storage } from \"fbase\";\r\n\r\nconst Jweet = ({ jweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newJweet, setNewJweet] = useState(jweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this jweet?\");\r\n    if (ok) {\r\n      console.log(dbService);\r\n      await deleteDoc(doc(dbService, \"jweets\", `${jweetObj.id}`));\r\n      await deleteObject(ref(storage, jweetObj.attachmentUrl));\r\n    }\r\n  };\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(jweetObj, newJweet);\r\n    await updateDoc(doc(dbService, \"jweets\", `${jweetObj.id}`), {\r\n      text: newJweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewJweet(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              value={newJweet}\r\n              placeholder=\"Edit your jweet\"\r\n              required\r\n            />\r\n            <input type=\"submit\" value=\"Update Jweet\" />\r\n            <button onClick={toggleEditing}>Cancel</button>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{jweetObj.text}</h4>\r\n          {jweetObj.attachmentUrl && (\r\n            <img src={jweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Jweet</button>\r\n              <button onClick={toggleEditing}>Edit Jweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jweet;\r\n","import React, { useState } from \"react\";\r\nimport { storage, dbService } from \"fbase\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [jweet, setJweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n      const uploadFile = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      console.log(uploadFile);\r\n      attachmentUrl = await getDownloadURL(ref(storage, attachmentRef));\r\n    }\r\n    const jweetObj = {\r\n      text: jweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await addDoc(collection(dbService, \"jweets\"), jweetObj);\r\n\r\n    setJweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setJweet(value);\r\n  };\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      //readAsDataURLÏù¥ ÎÅùÎÇòÎ©¥ finishedEventÎ•º Î∞õÏùå\r\n      console.log(finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile); // ÌååÏùºÏùÑ ÏùΩÍ∏∞ ÏãúÏûë\r\n  };\r\n  const onClearAttachment = () => {\r\n    setAttachment(null);\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          value={jweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n        <input type=\"submit\" value=\"Jweet\" />\r\n        {attachment && (\r\n          <div>\r\n            <img src={attachment} width=\"50px\" height=\"50px\" />\r\n            <button onClick={onClearAttachment}>Clear</button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  getDocs,\r\n  doc,\r\n  onSnapshot,\r\n  setDoc,\r\n} from \"firebase/firestore\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { dbService, storage } from \"fbase.js\";\r\nimport Jweet from \"components/Jweet\";\r\nimport NweetFactory from \"components/JweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [jweets, setJweets] = useState([]);\r\n\r\n  // const getJweets = async () => {\r\n  //   const dbJweets = await getDocs(collection(dbService, \"jweets\"));\r\n  //   dbJweets.forEach((doc) => {\r\n  //     const jweetObject = {\r\n  //       ...doc.data(),\r\n  //       id: doc.id,\r\n  //     };\r\n  //     setJweets((prev) => [jweetObject, ...prev]);\r\n  //   });\r\n  // };  // Íµ¨ÏãùÎ∞©Î≤ïÏù¥Îùº ÌïòÍ≥† ÏßÄÏö∞Ïã¨\r\n  useEffect(() => {\r\n    // getJweets();\r\n    const q = query(collection(dbService, \"jweets\"));\r\n    onSnapshot(q, (snapshot) => {\r\n      const jweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setJweets(jweetArray);\r\n      // Ïó¨Í∏∞ÍπåÏßÄÍ∞Ä ÏÉàÎ°úÏö¥ Î∞©Î≤ï\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {jweets.map((jweet) => (\r\n          <Jweet\r\n            key={jweet.id}\r\n            jweetObj={jweet}\r\n            isOwner={jweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { query, where, collection, orderBy } from \"firebase/firestore\";\r\nimport { updateProfile } from \"firebase/auth\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const navigate = useNavigate();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  useEffect(() => {\r\n    getMyJweets();\r\n  }, []);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    navigate(\"/\");\r\n    refreshUser(\"\");\r\n  };\r\n  const getMyJweets = async () => {\r\n    const jweets = query(\r\n      collection(dbService, \"jweets\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      orderBy(\"createdAt\")\r\n    );\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n      console.log(userObj.displayName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Navigation from \"./Navigation\";\r\nimport Auth from \"./routes/Auth\";\r\nimport Home from \"./routes/Home\";\r\nimport Profile from \"./routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Routes>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route path=\"/\" element={<Home userObj={userObj} />}></Route>\r\n            <Route\r\n              path=\"/profile\"\r\n              element={<Profile userObj={userObj} refreshUser={refreshUser} />}\r\n            ></Route>\r\n          </>\r\n        ) : (\r\n          <Route path=\"/\" element={<Auth />}></Route>\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import AppRouter from \"components/Router\";\nimport { useState, useEffect } from \"react\";\nimport { authService } from \"fbase\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // setUserObj({\n        //   displayName: user.displayName,\n        //   uid: user.uid.refreshUser,\n        //   updateProfile: (args) => user.updateProfile(args),\n        // });\n        setUserObj(user);\n\n        const uid = user.uid;\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    // setUserObj({\n    //   displayName: user.displayName,\n    //   uid: user.uid.refreshUser,\n    //   updateProfile: (args) => user.updateProfile(args),\n    // });\n    setUserObj(Object.assign({}, user));\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}